gene_set = list(kegg_gs, 
                react_gs, 
                msigdb_gs,
                go_gs,
                new_gs)

#df_logfc1 <- NULL
df_logfc2 <- NULL

for (i in c("ORA", "GSEA")){
  
  for (j in 1:length(gene_set)) {
    
    if (i == "ORA") {
      
      go_results_ms <- safely(genORA)(res %>% as.data.frame() %>% dplyr::filter(log2FoldChange < -1 & padj < 0.01) %>%
                              rownames_to_column("gene") %>%
                              pull(gene),
                            universe = res %>% as.data.frame() %>% filter(baseMean != 0) %>% rownames_to_column(var = "gene") %>% pull(gene),
                            geneset = gene_set[[j]]
                            )$result
    
                  
    
    if (!is.null(go_results_ms)) {
      go_results_ms$species <- "mouse"
      go_results_ms$method <- "ORA"
      go_results_ms$geneset <- gene_set[[j]]$type
      }
  
  
  go_results_espl <- safely(genORA)(id = res %>% as.data.frame() %>% dplyr::filter(log2FoldChange > 1 & padj < 0.01) %>% 
                          rownames_to_column("gene") %>%
                          pull(gene), 
                        universe = res %>% as.data.frame() %>% filter(baseMean != 0) %>% rownames_to_column(var = "gene") %>% pull(gene),
                        geneset = gene_set[[j]]
                        )$result
  
  if (!is.null(go_results_espl)) {
    go_results_espl$species <- "bat"
    go_results_espl$method <- "ORA"
    go_results_espl$geneset <- gene_set[[j]]$type
  }
  
  df_logfc1 <- rbind(go_results_espl,
                     go_results_ms)
  
  df_logfc2 <- rbind(df_logfc2, 
                     subset(df_logfc1 %>% rownames_to_column("id"), 
                            select = c("p.adjust", "Description", "species", "method", "geneset")))
  
    }
    
    if (i == "GSEA") {
      
      gse <- genGSEA(genelist = rankedGenes, 
                     geneset = gene_set[[j]])

      gse$gsea_df$method = "GSEA"
      gse$gsea_df = gse$gsea_df %>% mutate(species = ifelse(NES > 0, "bat", "mouse"))
      gse$gsea_df$geneset <- gene_set[[j]]$type
      
      df_logfc2 <- bind_rows(df_logfc2, 
                        gse$gsea_df %>% select("p.adjust", "Description", "species", "method", "geneset"))
      
    }
    

  }}


tidyheatmap(df = df_logfc2 %>% filter(p.adjust < 0.05) %>% dplyr::mutate(p.adjust = pval_adj(p.adjust)) %>%
            arrange(species, geneset, method, Description),
            rows = Description,
            columns = c(species,geneset, method),
            values = p.adjust,
            #scale = "row",
            #annotation_col = c(species),
            #annotation_row = c(is_immune_gene, direction),
            #gaps_row = direction,
            #color_legend_min = 0,
            color_legend_max = 1.3,
            color_legend_n = 1,
            fontsize_row = 8,
            fontsize_col = 12,
            gaps_col = species
)
